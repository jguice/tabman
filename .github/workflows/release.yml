name: Release
on:
  push:
    branches:
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    name: Release
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - name: Install dependencies
        run: npm install -g semantic-release @semantic-release/git @semantic-release/changelog @semantic-release/exec

      - name: Build workflow
        run: |
          chmod +x ./build.sh
          ./build.sh

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get the next version that semantic-release will create
          NEXT_VERSION=$(npx semantic-release --dry-run | grep "The next release version is" | sed -E 's/.*is ([0-9]+\.[0-9]+\.[0-9]+).*/\1/' || echo '')
          
          if [ ! -z "$NEXT_VERSION" ]; then
            # Update version in info.plist
            awk -v ver="$NEXT_VERSION" '
              /<key>version<\/key>/ {
                print $0
                getline
                if ($0 ~ /<(integer|string)>/) {
                  sub(/>.*</, ">" ver "<")
                }
              }
              { print }
            ' info.plist > info.plist.tmp && mv info.plist.tmp info.plist
            
            # Commit the version update
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git config --global user.name "github-actions[bot]"
            git add info.plist
            git commit -m "chore: update version to $NEXT_VERSION [skip ci]"
            git push
          fi
          
          # Run the actual release
          npx semantic-release
